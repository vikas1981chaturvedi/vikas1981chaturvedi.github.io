{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/country.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<body>\\r\\n \\r\\n  <div class=\\\"container\\\">\\r\\n    <app-home></app-home>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination'; \r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    NgxPaginationModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' }\r\n     \r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, throwError, combineLatest, BehaviorSubject, Subject, merge } from 'rxjs';\r\nimport { catchError, tap, map, scan, shareReplay } from 'rxjs/operators';\nimport { Countries } from './countries';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryService {\r\n    \n  private countriesUrl = 'https://restcountries.eu/rest/v2';\n  \n    \r\n\n  constructor(private http: HttpClient) { }\n  \n  countries$ = this.http.get<Countries[]>(this.countriesUrl)\r\n    .pipe(\r\n      tap(data => JSON.stringify(data)),\r\n       // console.log('Countries: ', JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n  );\n  \n  private handleError(err: any) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage: string;\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n    }\r\n    console.error(err);\r\n    return throwError(errorMessage);\r\n  }\r\n\n}\n","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Test exericse</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"btnClicked('Europe')\\\">Europe</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary mr-2\\\" (click)=\\\"btnClicked('Asia')\\\">Asia</button>\\r\\n\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" #code placeholder=\\\"Search countries..\\\" aria-label=\\\"Search\\\"\\r\\n               (keydown.enter)=\\\"searchByCountryCode(code.value)\\\" >\\r\\n      </form>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n</header>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n    <div class='card-body'\\r\\n         *ngIf=\\\"countryVal && countryVal.length\\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table mb-0\\\"\\r\\n               *ngIf=\\\"countryVal && countryVal.length\\\">\\r\\n          <thead>\\r\\n          <th>Name</th>\\r\\n          <th>Capital</th>\\r\\n          <th>Currencies</th>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let country of countryVal| paginate: { itemsPerPage: 5, currentPage: p }\\\">\\r\\n              <td style=\\\"align-content:flex-start\\\">\\r\\n                <!--<a herf=\\\"#\\\" role=\\\"button\\\" (click)=\\\"funcDetails(country.name)\\\">\\r\\n            {{country.name}}\\r\\n          </a>-->\\r\\n                \\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"funcDetails(country.name)\\\" style=\\\"width:80PX\\\">\\r\\n                  {{country.name}}\\r\\n\\r\\n                </button>\\r\\n\\r\\n              </td>\\r\\n              <td>{{country.capital}}</td>\\r\\n              <td>{{country.currencies[0].symbol}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table mb-0\\\"\\r\\n         *ngIf=\\\"searchVal && searchVal.length\\\">\\r\\n   \\r\\n    <tbody *ngFor=\\\"let country of searchVal\\\">\\r\\n      <tr >\\r\\n        <td style=\\\"align-content:flex-start\\\" colspan=\\\"2\\\">\\r\\n\\r\\n          <h3>\\r\\n            {{country.name}}\\r\\n\\r\\n\\r\\n          </h3>\\r\\n\\r\\n\\r\\n\\r\\n        </td>\\r\\n\\r\\n       \\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Area:</td>\\r\\n        <td>{{country.area}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Language:</td>\\r\\n        <td>{{country.languages[0].name}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Papulation</td>\\r\\n        <td>{{country.population}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"alert alert-danger\\\"\\r\\n       *ngIf=\\\"errorMessage$ | async as errorMessage\\\">\\r\\n    {{errorMessage}}\\r\\n  </div>\\r\\n  <footer>\\r\\n    <div *ngIf=\\\"countryVal && countryVal.length\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"btnClear()\\\">Clear</button>\\r\\n    </div>\\r\\n  </footer>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { CountryService } from './country.service';\r\nimport { EMPTY, Subject, combineLatest, BehaviorSubject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Countries } from './countries';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit{\r\n  countryVal: any;\r\n  searchVal: any;\r\n  p: number = 1;\r\n  \r\n  private errorMessageSubject = new Subject<string>();\r\n  errorMessage$ = this.errorMessageSubject.asObservable();\r\n  \r\n  countries$ = this.countriesService.countries$.pipe(\r\n    catchError(err => {\r\n      this.errorMessageSubject.next(err);\r\n      return EMPTY;\r\n    })\r\n  );\r\n \r\n  errorMessage: any;\r\n\r\n  constructor(private countriesService: CountryService) { }\r\n    ngOnInit(): void {\r\n      this.countryVal = null;\r\n      this.searchVal = null;\r\n  }\r\n  btnClicked(val: any) {\r\n    this.countryVal = null;\r\n    this.searchVal = null;\r\n      this.countries$.subscribe(\r\n        countries => {\r\n          \r\n          this.countryVal = countries.filter(countries => countries.region === val);\r\n          \r\n        },\r\n        error => this.errorMessage = <any>error\r\n      );\r\n   // }\r\n\r\n  }\r\n  searchByCountryCode(val: any) {\r\n    \r\n    this.countryVal = null;\r\n    this.searchVal = null;\r\n    this.countries$.subscribe(\r\n      countries => {\r\n        //debugger;\r\n        this.countryVal = countries.filter(countries => countries.name.toLowerCase().includes(val));\r\n\r\n      },\r\n      error => this.errorMessage = <any>error\r\n    );\r\n  }\r\n  funcDetails(val: any) {\r\n    this.searchVal = null;\r\n\r\n    this.countries$.subscribe(\r\n      countries => {\r\n       // debugger;\r\n        this.searchVal = countries.filter(countries => countries.name===val);\r\n\r\n      },\r\n      error => this.errorMessage = <any>error\r\n    );\r\n  }\r\n  btnClear() {\r\n    this.searchVal = null;\r\n    this.countryVal = null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}